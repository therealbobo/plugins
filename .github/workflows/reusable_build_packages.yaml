# This is a reusable workflow used by master and release CI
on:
  workflow_call:
    inputs:
      makecommand:
        description: Command used for make
        required: true
        type: string
      suffix:
        description: Suffix for uploading packages (dev or stable)
        required: true
        type: string
        
jobs:
  build-packages-x86:
    runs-on: ubuntu-latest
    container: golang:1.18
    steps:
      - name: Install deps
        run: |
          apt update
          apt install -y --no-install-recommends git awscli
    
      - name: Checkout Plugins ⤵️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
          
      - name: Run x86 build 🏗️
        run: ${{ inputs.makecommand }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugins-x86_64-${{ inputs.suffix }}.tar.gz
          path: output/*.tar.gz

  build-packages-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Plugins ⤵️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run arm64 build 🏗️
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu_latest
          githubToken: ${{ github.token }}

          setup: |
            mkdir -p "/tmp/artifacts"

          dockerRunArgs:
            --volume "/var/run/docker.sock:/var/run/docker.sock"
 
          install: |
            apt-get update && apt-get install -y --no-install-recommends docker.io && apt-get clean
          
          # Note: we still use /tmp/artifacts as volume source because
          # we are running docker in docker but we are still using HOST socket.
          # See https://stackoverflow.com/questions/31381322/docker-in-docker-cannot-mount-volume.
          run: |
            cat > script.sh <<EOF
            #!/bin/sh
            apt-get update && apt-get install -y --no-install-recommends ca-certificates curl && apt-get clean
            update-ca-certificates
            git config --global --add safe.directory /repo
            cd /repo && ${{ inputs.makecommand }}
            cp -R output/* /artifacts
            EOF
            chmod +x script.sh
            docker run -ti --rm --platform arm64 -v /tmp/artifacts:/artifacts -v ${{ github.workspace }}:/repo golang:1.18 /repo/script.sh
            
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugins-aarch64-${{ inputs.suffix }}.tar.gz
          path: /tmp/artifacts/*.tar.gz          

      
